<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>